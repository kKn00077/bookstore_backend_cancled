# Generated by Django 3.2.1 on 2021-05-06 08:47


from ... import accounts
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("files", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserAccount",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("account_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(max_length=255, null=True, unique=True)),
                ("phone", models.CharField(max_length=11, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("USE", "USE"),
                            ("DELETED", "DELETED"),
                            ("DORMANT", "DORMANT"),
                        ],
                        default="USE",
                        max_length=30,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "유저 계정 정보",
                "verbose_name_plural": "유저 계정 정보",
                "ordering": ["-account_id"],
            },
            managers=[
                ("objects", accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserCertification",
            fields=[
                (
                    "account",
                    models.OneToOneField(
                        db_column="account_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="accounts.useraccount",
                    ),
                ),
                ("is_sms_verified", models.BooleanField(default=False)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("sms_code", models.CharField(max_length=6, null=True)),
                ("email_code", models.CharField(max_length=6, null=True)),
                ("sms_time_limit", models.DateTimeField(null=True)),
                ("email_time_limit", models.DateTimeField(null=True)),
            ],
            options={
                "verbose_name": "유저 인증 정보",
                "verbose_name_plural": "유저 인증 정보",
                "ordering": ["-account"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("profile_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=30)),
                ("birth", models.DateField()),
                ("nickname", models.CharField(max_length=30)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "MALE"),
                            ("FEMALE", "FEMALE"),
                            ("OTHER", "OTHER"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "account",
                    models.OneToOneField(
                        db_column="account_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cat_img_file",
                    models.ForeignKey(
                        db_column="cat_img_file_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cat_img_file",
                        to="files.file",
                    ),
                ),
                (
                    "cat_sound_file",
                    models.ForeignKey(
                        db_column="cat_sound_file_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cat_sound_file",
                        to="files.file",
                    ),
                ),
                (
                    "profile_img_file",
                    models.ForeignKey(
                        db_column="profile_img_file_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="profile_img_file",
                        to="files.file",
                    ),
                ),
            ],
            options={
                "verbose_name": "일반 유저 프로필 정보",
                "verbose_name_plural": "일반 유저 프로필 정보",
                "ordering": ["-profile_id"],
            },
        ),
        migrations.CreateModel(
            name="OwnerUserProfile",
            fields=[
                ("profile_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=30)),
                ("birth", models.DateField()),
                ("nickname", models.CharField(max_length=30)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "MALE"),
                            ("FEMALE", "FEMALE"),
                            ("OTHER", "OTHER"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "account",
                    models.OneToOneField(
                        db_column="account_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cat_img_file",
                    models.ForeignKey(
                        db_column="cat_img_file_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owner_cat_img_file",
                        to="files.file",
                    ),
                ),
                (
                    "cat_sound_file",
                    models.ForeignKey(
                        db_column="cat_sound_file_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owner_cat_sound_file",
                        to="files.file",
                    ),
                ),
                (
                    "profile_img_file",
                    models.ForeignKey(
                        db_column="profile_img_file_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owner_profile_img_file",
                        to="files.file",
                    ),
                ),
            ],
            options={
                "verbose_name": "사장님 프로필 정보",
                "verbose_name_plural": "사장님 프로필 정보",
                "ordering": ["-profile_id"],
            },
        ),
    ]
